//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGet.Services.Staging.Manager.Controllers {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal Messages() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGet.Services.Staging.Manager.Controllers.Messages", typeof(Messages).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The specified API key is invalid or does not have permission to access the specified package..
        /// </summary>
        internal static string ApiKeyUnauthorizedMessage {
            get {
                return ResourceManager.GetString("ApiKeyUnauthorizedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Commit for stage &apos;{0}&apos; is in progress..
        /// </summary>
        internal static string CommitInProgressMessage {
            get {
                return ResourceManager.GetString("CommitInProgressMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Stage &apos;{0}&apos; is empty. Add packages before commiting, or delete stage..
        /// </summary>
        internal static string EmptyStageCommitMessage {
            get {
                return ResourceManager.GetString("EmptyStageCommitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provide a non-empty display name with length up to {0} characters.
        /// </summary>
        internal static string InvalidStageDisplayName {
            get {
                return ResourceManager.GetString("InvalidStageDisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Provide a valid stage id Guid.
        /// </summary>
        internal static string InvalidStageIdMessage {
            get {
                return ResourceManager.GetString("InvalidStageIdMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to This package requires version &apos;{0}&apos; of NuGet, which this gallery does not currently support. Please contact us if you have questions..
        /// </summary>
        internal static string MinClientVersionOutOfRangeMessage {
            get {
                return ResourceManager.GetString("MinClientVersionOutOfRangeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The NuGet package contains an invaid .nuspec file. The error encountered was:&apos;{0}&apos;. Correct the error and try again..
        /// </summary>
        internal static string NuspecErrorMessage {
            get {
                return ResourceManager.GetString("NuspecErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A package with id &apos;{0}&apos; and version &apos;{1}&apos; already exists on NuGet.org. Commit of this stage will fail..
        /// </summary>
        internal static string PackageAlreadyExists {
            get {
                return ResourceManager.GetString("PackageAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to The NuGet package is invalid. The error encountered was:&apos;{0}&apos;. Correct the error and try again..
        /// </summary>
        internal static string PackageErrorMessage {
            get {
                return ResourceManager.GetString("PackageErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to A package with id &apos;{0}&apos; and version &apos;{1}&apos; already exists on stage &apos;{2}&apos;. Delete and add to modify..
        /// </summary>
        internal static string PackageExistsOnStageMessage {
            get {
                return ResourceManager.GetString("PackageExistsOnStageMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to Edits of stage &apos;{0}&apos; are not allowed..
        /// </summary>
        internal static string StageEditNotAllowed {
            get {
                return ResourceManager.GetString("StageEditNotAllowed", resourceCulture);
            }
        }
    }
}
